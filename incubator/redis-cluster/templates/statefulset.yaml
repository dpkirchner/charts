apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "redis-cluster.fullname" . }}
  labels:
    app: {{ template "redis-cluster.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  serviceName: {{ template "redis-cluster.fullname" . }}-headless
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ template "redis-cluster.fullname" . }}
  template:
    metadata:
      annotations:
        {{- if .Values.annotations }}
{{ toYaml .Values.annotations | indent 8 }}
        {{- end }}
      labels:
        app: {{ template "redis-cluster.fullname" . }}
        {{- if .Values.labels }}
{{ toYaml .Values.labels | indent 8 }}
        {{- end }}
    spec:
    {{- with .Values.statefulset.affinity }}
      affinity:
{{ tpl . $ | indent 8 }}
    {{- end }}
      serviceAccountName: {{ template "redis-cluster.fullname" . }}
      subdomain: {{ template "redis-cluster.fullname" . }}-headless
      containers:
      - name: redis
        image: {{ template "redis.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy | default "Always" | quote }}
        ports:
        - containerPort: {{ .Values.service.clientPort }}
          name: client
        - containerPort: {{ .Values.service.gossipPort }}
          name: gossip
        command: ["redis-server"]
        args: ["/conf/redis.conf", "--cluster-announce-ip", "$(POD_IP)"]
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli -h $(hostname) cluster info | sed -ne '/^cluster_state:/p; /^cluster_state:ok/!q1; q0'"
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.service.clientPort }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: conf
          mountPath: /conf
          readOnly: false
        - name: data
          mountPath: /data
          readOnly: false
      volumes:
      - name: conf
        configMap:
          name: {{ template "redis-cluster.fullname" . }}
          defaultMode: 0755
  podManagementPolicy: Parallel
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        name: {{ template "redis-cluster.fullname" . }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}